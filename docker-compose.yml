 services:
    pockethost:
      image: node:20-alpine
      container_name: pockethost
      restart: unless-stopped
      privileged: true
      working_dir: /app

      command: |
        sh -c '
          echo "Installing system dependencies..."
          apk add --no-cache git bash docker-cli openssl curl python3 make g++ ca-certificates

          echo "Installing Node.js global packages..."
          npm install -g pnpm@9 tsx

          echo "Cloning or updating PocketHost repository..."
          if [ ! -d "/app/.git" ]; then
            git clone https://github.com/pockethost/pockethost.git /app
          else
            cd /app && git pull origin main
          fi

          echo "Installing Node dependencies (without frozen lockfile)..."
          cd /app
          pnpm install --no-frozen-lockfile

          echo "Creating required directories..."
          mkdir -p /data /home/pockethost/.pockethost /home/pockethost/.pockethost/ssl

          echo "Generate temporary SSL certs for internal use..."
          if [ ! -f "/home/pockethost/.pockethost/ssl/tls.key" ]; then
            openssl req -x509 -newkey rsa:4096 \
              -keyout /home/pockethost/.pockethost/ssl/tls.key \
              -out /home/pockethost/.pockethost/ssl/tls.cert \
              -days 365 -nodes \
              -subj "/C=US/ST=State/L=City/O=JWLS/CN=*.store.jwls.co"
          fi

          echo "Starting PocketHost server..."
          cd /app/packages/pockethost
          NODE_ENV=production tsx ./src/cli/index.ts serve
        '

      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - pockethost_app:/app
        - pockethost_data:/data
        - pockethost_home:/home/pockethost/.pockethost

      expose:
        - "80"
        - "443"
        - "8090"
        - "3000"

      environment:
        APEX_DOMAIN: ${APEX_DOMAIN}
        HTTP_PROTOCOL: ${HTTP_PROTOCOL}
        MOTHERSHIP_NAME: ${MOTHERSHIP_NAME}
        MOTHERSHIP_ADMIN_USERNAME: ${MOTHERSHIP_ADMIN_USERNAME}
        MOTHERSHIP_ADMIN_PASSWORD: ${MOTHERSHIP_ADMIN_PASSWORD}
        MOTHERSHIP_PORT: ${MOTHERSHIP_PORT}
        MOTHERSHIP_SEMVER: "0.22.*"
        NODE_ENV: ${NODE_ENV}
        PH_HOME: ${PH_HOME}
        DATA_ROOT: ${DATA_ROOT}
        DAEMON_PORT: ${DAEMON_PORT}
        DAEMON_PB_IDLE_TTL: ${DAEMON_PB_IDLE_TTL}
        SSL_KEY: ${SSL_KEY}
        SSL_CERT: ${SSL_CERT}
        DOCKER_CONTAINER_HOST: ${DOCKER_CONTAINER_HOST}
        MOTHERSHIP_CLOUDFLARE_API_TOKEN: ${MOTHERSHIP_CLOUDFLARE_API_TOKEN}
        MOTHERSHIP_CLOUDFLARE_ZONE_ID: ${MOTHERSHIP_CLOUDFLARE_ZONE_ID}
        MOTHERSHIP_CLOUDFLARE_ACCOUNT_ID: ${MOTHERSHIP_CLOUDFLARE_ACCOUNT_ID}
        DEBUG: ${DEBUG}
        PH_DEBUG: ${DEBUG}
        TRACE: "false"

  volumes:
    pockethost_app:
      driver: local
    pockethost_data:
      driver: local
    pockethost_home:
      driver: local
